angular.module("ngMinimalGrid",[]).provider("minimalGridConfig",function(){this.statsMessage="Showing %1 to %2 of %3 results",this.setStatsMessage=function(a){return this.statsMessage=a,this},this.firstButtonLabel="First",this.setFirstLabel=function(a){return this.firstButtonLabel=a,this},this.lastButtonLabel="Last",this.setLastLabel=function(a){return this.lastButtonLabel=a,this},this.$get=function(){return this}}).controller("minimalGridCtrl",["$scope","$parse","$filter","minimalGridConfig","$sce",function(a,e,t,n,s){function l(e){a.pages.total=[];for(var t=Math.ceil(e/a.pages.max),n=1;n<=t;n++)a.pages.total.push(n)}function i(){a.pages.current>a.pages.total.length&&(a.pages.current=1,a._lastPagePaginate=1),a.pages.first=1,a.pages.last=a.pages.total.length,a.pages.previous=a.pages.current-1>0?a.pages.current-1:1,a.pages.next=a.pages.current+1<=a.pages.total.length?a.pages.current+1:a.pages.total.length,a.pages.pagination=r()}function r(){var e=0;e<a.pages.range&&(e=a.pages.current-Math.ceil(a.pages.range/2));var t=a.pages.total.length-a.pages.range;return e>t&&(e=t),e<0&&(e=0),e}function g(e){a._data=e,a.data=Object.assign([],a._data)}a.firstButtonLabel=n.firstButtonLabel,a.lastButtonLabel=n.lastButtonLabel,a.$watchCollection("rows",function(e){g(e),a.fake||(l(a.data.length),i(),a._lastColumnOrderBy&&a.changeOrderBy(a._lastColumnOrderBy),a._lastPagePaginate&&a.changePaginate(a._lastPagePaginate))}),(a.fake||a.totalRows)&&a.$watch("totalRows",function(e){a._lastTotalPopulatePages=e,l(e),i()}),a.columnParse=function(a,n,l){var i=e(a)(n);return l.formatDate&&(i=t("date")(1e3*i,l.formatDate,"+0000")),l.onRender?s.trustAsHtml(l.onRender(i).toString()):i},a.statsParse=function(){var e=n.statsMessage,t=(a.pages.current-1)*a.pages.max>0?(a.pages.current-1)*a.pages.max+1:a._data.length>0?1:0;if(a.fake)if(void 0!=a._lastTotalPopulatePages)var s=(a.pages.current-1)*a.pages.max+a.pages.max<a._lastTotalPopulatePages?(a.pages.current-1)*a.pages.max+a.pages.max:a._lastTotalPopulatePages,l=a._lastTotalPopulatePages;else var s=0,l=0;else var s=(a.pages.current-1)*a.pages.max+a.pages.max<a._data.length?(a.pages.current-1)*a.pages.max+a.pages.max:a._data.length,l=a._data.length;return e.replace("%1",t).replace("%2",s).replace("%3",l)},a.changeOrderBy=function(e){if(a._lastColumnOrderBy!=e){var n=e.class;a.columns.map(function(a){a.class="sorting"}),e.class="sorting_asc"==n?"sorting_desc":"sorting_asc",a._lastColumnOrderBy=Object.assign({},e)}a.fake||(1!=a.pages.current&&(a.pages.current=1,g(a._data),i()),g(t("orderBy")(a.data,e.key,"sorting_desc"==e.class))),a.changeOrderByCallback&&a.changeOrderByCallback({orderBy:{orderdirection:e.class.replace("sorting_",""),orderby:e.key}})},a.changePaginate=function(e,t){if(t&&t.preventDefault(),a._lastPagePaginate=Number(e),a.pages.current=e,i(),!a.fake){g(a._data);var n=a.pages.current-1>0?(a.pages.current-1)*a.pages.max:0;a.data=a.data.slice(n)}a.changePaginateCallback&&a.changePaginateCallback({pages:a.pages})},a.clickRow=function(e){a.clickRowCallback&&a.clickRowCallback({row:e})},a._data=[],a.data=[],a._lastColumnOrderBy=void 0,a._lastPagePaginate=void 0,a._lastTotalPopulatePages=void 0,a.fake=a.fake||!1,a.columns.map(function(a){a.class="sorting"}),a.pages={first:1,last:1,previous:1,next:1,current:1,total:[1],max:a.paginationMax||10,range:a.paginationRange||5,pagination:0}}]).directive("minimalGrid",[function(){return{restrict:"E",scope:{columns:"<",rows:"<",fake:"<?",totalRows:"<?",paginationMax:"<?",paginationRange:"<?",changeOrderByCallback:"&?onChangeOrderBy",changePaginateCallback:"&?onChangePaginate",clickRowCallback:"&?onClickRow"},controller:"minimalGridCtrl",template:'<table class="dataTable table table-striped table-bordered table-hover no-footer">              <thead>                <tr>                  <th ng-click="changeOrderBy(column)" ng-repeat="column in columns" class="{{ column.class }} {{ column.hide }}">{{ column.title }}</th>                </tr>              </thead>              <tbody>                <tr class="odd" ng-repeat="dataRow in data | limitTo : pages.max">                  <td ng-click="clickRow(dataRow)" ng-repeat="column in columns" class="{{ columns[$index].hide }}">                    <span ng-if="!!columns[$index].onRender" ng-bind-html="columnParse(columns[$index].key, dataRow, columns[$index])"></span>                    <span ng-if="!!!columns[$index].onRender" ng-bind="columnParse(columns[$index].key, dataRow, columns[$index])"></span>                  </td>                </tr>              </tbody>          </table>          <div>            <div class="pull-left">              <div ng-bind="statsParse()" class="totais"></div>            </div>            <div class="pull-right">              <ul class="pagination">                <li><a href="#" ng-click="changePaginate(pages.first, $event)">{{ firstButtonLabel }}</a></li>                <li><a href="#" ng-click="changePaginate(pages.previous, $event)"><< </a></li>                <li class="{{ ( n == pages.current ? \'active\' : \'\') }}"                  ng-click="changePaginate(n, $event)" ng-repeat="n in pages.total | limitTo : pages.range : pages.pagination"><a href="#">{{ n }}</a></li>                <li><a href="#" ng-click="changePaginate(pages.next, $event)"> >> </a></li>                <li><a href="#" ng-click="changePaginate(pages.last, $event)">{{ lastButtonLabel }}</a></li>              </ul>            </div>            <div class="clearfix"></div>          </div>'}}]);
