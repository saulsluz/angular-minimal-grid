!function(){angular.module("ngMinimalGrid",[]).provider("minimalGridConfig",function(){this.statsMessage="Showing %1 to %2 of %3 results",this.setStatsMessage=function(a){return this.statsMessage=a,this},this.firstButtonLabel="First",this.setFirstLabel=function(a){return this.firstButtonLabel=a,this},this.lastButtonLabel="Last",this.setLastLabel=function(a){return this.lastButtonLabel=a,this},this.$get=function(){return this}}).controller("minimalGridCtrl",["$scope","$parse","$filter","minimalGridConfig",function(a,e,t,n){function r(e){a.pages.total=[]
for(var t=Math.ceil(e/a.pages.max),n=1;n<=t;n++)a.pages.total.push(n)}function s(){a.pages.current>a.pages.total.length&&(a.pages.current=1,a._lastPagePaginate=1),a.pages.first=1,a.pages.last=a.pages.total.length,a.pages.previous=a.pages.current-1>0?a.pages.current-1:1,a.pages.next=a.pages.current+1<=a.pages.total.length?a.pages.current+1:a.pages.total.length,a.pages.pagination=i()}function i(){var e=0
e<a.pages.range&&(e=a.pages.current-Math.ceil(a.pages.range/2))
var t=a.pages.total.length-a.pages.range
return e>t&&(e=t),e<0&&(e=0),e}function l(e){a._data=e,a.data=Object.assign([],a._data)}if(a.firstButtonLabel=n.firstButtonLabel,a.lastButtonLabel=n.lastButtonLabel,!angular.isArray(a.rows))throw new Error("minimalGrid error: rows must be an Array")
if(a.$watchCollection("rows",function(e){l(e),a.fake||(r(a.data.length),s(),a._lastColumnOrderBy&&a.changeOrderBy(a._lastColumnOrderBy),a._lastPagePaginate&&a.changePaginate(a._lastPagePaginate))}),(a.fake||a.totalRows)&&a.$watch("totalRows",function(e){a._lastTotalPopulatePages=e,r(e),s()}),a.columnParse=function(a,n,r){var s=e(a),i=s(n)
return r.formatDate&&(i=t("date")(1e3*i,r.formatDate,"+0000")),r.onRender=r.onRender||function(a){return a},r.onRender(i)},a.statsParse=function(){var e=n.statsMessage,t=(a.pages.current-1)*a.pages.max>0?(a.pages.current-1)*a.pages.max+1:a._data.length>0?1:0
if(a.fake)if(void 0!=a._lastTotalPopulatePages)var r=(a.pages.current-1)*a.pages.max+a.pages.max<a._lastTotalPopulatePages?(a.pages.current-1)*a.pages.max+a.pages.max:a._lastTotalPopulatePages,s=a._lastTotalPopulatePages
else var r=0,s=0
else var r=(a.pages.current-1)*a.pages.max+a.pages.max<a._data.length?(a.pages.current-1)*a.pages.max+a.pages.max:a._data.length,s=a._data.length
return e.replace("%1",t).replace("%2",r).replace("%3",s)},a.changeOrderBy=function(e){if(a._lastColumnOrderBy!=e){var n=e.class
a.columns.map(function(a){a.class="sorting"}),e.class="sorting_asc"==n?"sorting_desc":"sorting_asc",a._lastColumnOrderBy=Object.assign({},e)}if(!a.fake){1!=a.pages.current&&(a.pages.current=1,l(a._data),s())
l(t("orderBy")(a.data,e.key,"sorting_desc"==e.class))}if(angular.isDefined(a.changeOrderByCallback)){if(!angular.isFunction(a.changeOrderByCallback))throw new Error("minimalGrid error: on-change-order-by must be a Function")
a.changeOrderByCallback({orderBy:{orderdirection:e.class.replace("sorting_",""),orderby:e.key}})}},a.changePaginate=function(e){if(a._lastPagePaginate=Number(e),a.pages.current=e,s(),!a.fake){l(a._data)
var t=a.pages.current-1>0?(a.pages.current-1)*a.pages.max:0
a.data=a.data.slice(t)}a.changePaginateCallback&&a.changePaginateCallback({pages:a.pages})},a.clickRow=function(e){a.clickRowCallback&&a.clickRowCallback({row:e})},a._data=[],a.data=[],a._lastColumnOrderBy=void 0,a._lastPagePaginate=void 0,a._lastTotalPopulatePages=void 0,a.fake=a.fake||!1,!angular.isArray(a.columns))throw new Error("minimalGrid error: columns must be an Array")
if(a.columns.map(function(a){a.class="sorting"}),angular.isDefined(a.paginationMax)&&!angular.isNumber(a.paginationMax))throw new Error("minimalGrid error: pagination-max must be a Number")
if(angular.isDefined(a.paginationRange)&&!angular.isNumber(a.paginationRange))throw new Error("minimalGrid error: pagination-range must be a Number")
a.pages={first:1,last:1,previous:1,next:1,current:1,total:[1],max:a.paginationMax||10,range:a.paginationRange||5,pagination:0}}]).directive("minimalGrid",[function(){return{restrict:"E",scope:{columns:"<",rows:"<",fake:"<?",totalRows:"<?",paginationMax:"<?",paginationRange:"<?",changeOrderByCallback:"&?onChangeOrderBy",changePaginateCallback:"&?onChangePaginate",clickRowCallback:"&?onClickRow"},controller:"minimalGridCtrl",template:'<div ng-bind="statsParse()"></div>  <table class="dataTable table table-striped table-bordered table-hover no-footer">    <thead>      <tr>        <th ng-click="changeOrderBy(column)" ng-repeat="column in columns" class="{{ column.class }} {{ column.hide }}">{{ column.title }}</th>      </tr>    </thead>    <tbody>      <tr class="odd" ng-repeat="dataRow in data | limitTo : pages.max">        <td ng-click="clickRow(dataRow)" ng-repeat="column in columns" class="{{ columns[$index].hide }}" ng-bind="columnParse(columns[$index].key, dataRow, columns[$index])"></td>      </tr>    </tbody>  </table>  <div class="pull-right">    <ul class="pagination">      <li><a href="#" ng-click="changePaginate(pages.first)">{{ firstButtonLabel }}</a></li>      <li>        <a href="#" ng-click="changePaginate(pages.previous)">          << </a>      </li>      <li class="{{ ( n == pages.current ? \'active\' : \'\') }}"        ng-click="changePaginate(n)" ng-repeat="n in pages.total | limitTo : pages.range : pages.pagination"><a href="#">{{ n }}</a></li>      <li><a href="#" ng-click="changePaginate(pages.next)"> >> </a></li>      <li><a href="#" ng-click="changePaginate(pages.last)">{{ lastButtonLabel }}</a></li>    </ul>  </div></div><div class="clearfix"></div>'}}])}()
